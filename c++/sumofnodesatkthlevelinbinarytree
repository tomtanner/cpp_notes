#include <iostream>
#include <queue>
using namespace std;
struct Node{
  int val;
  struct Node* left;
  struct Node* right;
  Node(int data)
  {
    val=data;
    left=NULL;
    right=NULL;
  } 
};
int sumAtk(Node* root,int K)
{
  int level=0,sum=0;
  if(root==NULL)
  return -1;
  queue<Node*>q;
  q.push(root);
  q.push(NULL);
  while(!q.empty())
  {
    Node* cur=q.front();
    q.pop();
    if(cur){
    if(level==K)
    sum+=cur->val;
    if(cur->left)
    q.push(cur->left);
    if(cur->right)
    q.push(cur->right);
  }
  else if(!q.empty())
  {
    q.push(NULL);
    level++;
  }
  }
   return sum;
}
void preorder(Node* root)
{
  if(root==NULL)
  return;
  cout<<root->val<<" ";
  preorder(root->left);
  preorder(root->right);
}
int main()
{
   Node* root=new Node(1);
   root->left=new Node(2);
   root->right=new Node(3);
   root->left->left=new Node(4);
   root->left->right=new Node(5);
   root->right->left=new Node(6);
   root->right->right=new Node(7);
  cout<<sumAtk(root,2);
  return 0;
}
