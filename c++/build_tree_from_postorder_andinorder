#include <iostream>
using namespace std;
struct Node{
  int val;
  struct Node* left;
  struct Node* right;
  Node(int data)
  {
    val=data;
    left=NULL;
    right=NULL;
  }
  Node()
  {

  }
};
int search(int inorder[],int start,int end,int el)
{
  for(int i=0;i<=end;i++)
  {
    if(inorder[i]==el)
    return i;
  }
  return -1;//this will never be hit
}
Node* buildTree(int postorder[],int inorder[],int start,int end)
{
  if(start>end)
  return NULL;
    static int idx=end;
    int cur=postorder[idx];
    idx--;
    int pos=search(inorder,start,end,cur);
    Node* node=new Node(cur);
    if(start==end)
    return node;
    node->right=buildTree(postorder,inorder,pos+1,end);
    node->left=buildTree(postorder,inorder,start,pos-1);
    return node;
}
void printinorder(Node* root)
{
  if(root==NULL)
  return;
  printinorder(root->left);  cout<<root->val<<" ";

  printinorder(root->right);
}
int main()
{
  int postorder[]={4,2,5,3,1};
  int inorder[]={4,2,1,5,3};
  Node* root=buildTree(postorder,inorder,0,4);
  printinorder(root);
  return 0;
}
